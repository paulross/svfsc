# Write 1Mb of test_data_bytes_512 in different, equally sized, blocks that are all coalesced and report the time taken.
# Essentially only one block is created and all the other test_data_bytes_512 is appended.
# $1   $2 $3 $4 $5 $6                                                            $7              $8              $9             $10             $11 $12
# Threads Function                                                             ----           Bytes              ms           ms/Mb            Mb/s Test
1   TestCount SVFS::test_write_multithreaded(int, bool, t_test_results &)      pass         1048576        8.388300           8.388           119.2 Multi threaded write [1] Coalesced 1
2   TestCount SVFS::test_write_multithreaded(int, bool, t_test_results &)      pass         2097152       19.534872           9.767           102.4 Multi threaded write [2] Coalesced 1
4   TestCount SVFS::test_write_multithreaded(int, bool, t_test_results &)      pass         4194304       28.160878           7.040           142.0 Multi threaded write [4] Coalesced 1
8   TestCount SVFS::test_write_multithreaded(int, bool, t_test_results &)      pass         8388608       39.571842           4.946           202.2 Multi threaded write [8] Coalesced 1
16  TestCount SVFS::test_write_multithreaded(int, bool, t_test_results &)      pass        16777216       37.584596           2.349           425.7 Multi threaded write [16] Coalesced 1
32  TestCount SVFS::test_write_multithreaded(int, bool, t_test_results &)      pass        33554432       28.978555           0.906          1104.3 Multi threaded write [32] Coalesced 1
64  TestCount SVFS::test_write_multithreaded(int, bool, t_test_results &)      pass        67108864       27.127527           0.424          2359.2 Multi threaded write [64] Coalesced 1
128 TestCount SVFS::test_write_multithreaded(int, bool, t_test_results &)      pass       134217728       27.493342           0.215          4655.7 Multi threaded write [128] Coalesced 1
