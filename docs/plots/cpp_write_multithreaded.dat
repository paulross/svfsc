# Write 1Mb of test_data_bytes_512 in different, equally sized, blocks that are all coalesced and report the time taken.
# Essentially only one block is created and all the other test_data_bytes_512 is appended.
# $1   $2 $3 $4 $5                                                             $6              $7               $8              $9             $10  $11
# Threads Function                                                             ----           Bytes              ms           ms/Mb            Mb/s Test
1   TestCount SVFS::test_write_multithreaded_n(int, t_test_results &)          pass         1048564       67.343429          67.344            14.8 Multi threaded write [1]
2   TestCount SVFS::test_write_multithreaded_n(int, t_test_results &)          pass         2097128      238.530598         119.267             8.4 Multi threaded write [2]
4   TestCount SVFS::test_write_multithreaded_n(int, t_test_results &)          pass         4194256     1209.728200         302.436             3.3 Multi threaded write [4]
8   TestCount SVFS::test_write_multithreaded_n(int, t_test_results &)          pass         8388512     2215.297437         276.915             3.6 Multi threaded write [8]
16  TestCount SVFS::test_write_multithreaded_n(int, t_test_results &)          pass        16777024     3950.327152         246.898             4.1 Multi threaded write [16]
32  TestCount SVFS::test_write_multithreaded_n(int, t_test_results &)          pass        33554048     7188.165382         224.633             4.5 Multi threaded write [32]
64  TestCount SVFS::test_write_multithreaded_n(int, t_test_results &)          pass        67108096    14457.780730         225.905             4.4 Multi threaded write [64]
128 TestCount SVFS::test_write_multithreaded_n(int, t_test_results &)          pass       134216192    26282.453122         205.334             4.9 Multi threaded write [128]
